apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: "jacoco"
apply plugin: 'signing'

group = 'com.github.wenhao'
version = '1.0.1'

repositories {
    mavenCentral()
}

compileJava {
    sourceCompatibility=1.6
    targetCompatibility=1.6
}
compileTestJava {
    sourceCompatibility=1.6
    targetCompatibility=1.6
}

dependencies {
    compile(
            "org.apache.httpcomponents:httpmime:$httpVersion",
            "se.jbee:silk-di:$silkVersion",
            "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$yamlVersion",
            "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion",
            "org.slf4j:slf4j-api:$slf4jVersion"
    )

    testCompile(
            "junit:junit:$junitVersion",
            "org.hamcrest:hamcrest-library:$hamcrestVersion",
            "org.mockito:mockito-all:$mockitoVersion",
            "com.github.dreamhead:moco-core:$mocoVersion"
    )

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives jar
        archives sourcesJar
        archives javadocJar
    }

    signing {
        required { gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2'
}

checkstyle {
    configFile = file('config/checkstyle/checkstyle.xml')
}

test {
    jacoco {
        enabled = true
        append = true
    }
}

jacoco {
    toolVersion = "0.6.5.201403032054"
}

jacocoTestReport {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name project.name
                packaging 'jar'
                description 'Simplified, lightweight HTTP client library, a wrapper for apache httpclient.'
                url 'https://github.com/wenhao/http'

                scm {
                    url 'scm:git@github.com:wenhao/http.git'
                    connection 'scm:git@github.com:wenhao/http.git'
                    developerConnection 'git@github.com:wenhao/http.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'wenhao'
                        name 'Hao Wen'
                        email 'wenhao@126.com'
                        organization 'Hao Wen'
                        roles {
                            role 'Developer'
                        }
                    }
                }
            }
        }
    }
}