apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: "jacoco"
apply plugin: 'signing'

group = 'com.github.wenhao'
version '0.0.1-SNAPSHOT'
sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
    mavenCentral()
}

project.ext {
    silkVersion = '0.6'
    httpVersion = '4.3.2'
    commonsVersion = '3.2.1'
    netVersion = '3.3'
    ioVersion = '2.4'

    junitVersion = '4.11'
    hamcrestVersion = '1.3'
    mockitoVersion = '1.9.5'
    mocoVersion = '0.9.1'
}

dependencies {
    compile(
            "se.jbee:silk-di:$silkVersion",
            "commons-net:commons-net:$netVersion",
            "commons-io:commons-io:$ioVersion",
            "org.apache.commons:commons-lang3:$commonsVersion",
            "commons-collections:commons-collections:$commonsVersion",
            "org.apache.httpcomponents:httpclient:$httpVersion"
    )

    testCompile(
            "junit:junit:$junitVersion",
            "org.hamcrest:hamcrest-library:$hamcrestVersion",
            "org.mockito:mockito-all:$mockitoVersion",
            "com.github.dreamhead:moco-core:$mocoVersion"
    )

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives jar
        archives sourcesJar
        archives javadocJar
    }

    signing {
        required { gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}

checkstyle {
    configFile = file('config/checkstyle/checkstyle.xml')
}

test {
    jacoco {
        enabled = true
        append = true
    }
}

jacoco {
    toolVersion = "0.6.5.201403032054"
}

jacocoTestReport {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    additionalSourceDirs = files(sourceSets.main.allJava.srcDirs)
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name project.name
                packaging 'jar'
                description 'http is a framework, mainly focusing on testing connection over network protocol.'
                url 'https://github.com/wenhao/http'

                scm {
                    url 'scm:git@github.com:wenhao/http.git'
                    connection 'scm:git@github.com:wenhao/http.git'
                    developerConnection 'git@github.com:wenhao/http.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'wenhao'
                        name 'Wen Hao'
                    }
                }
            }
        }
    }
}